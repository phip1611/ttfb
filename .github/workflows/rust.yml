name: Build

on:
  merge_group:
  pull_request:
  push:

env:
  CARGO_TERM_COLOR: always
  CARGO_TERM_COLOR2: always

jobs:
  build_binary:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ macos-latest, ubuntu-latest, windows-latest ]
        # 1.64: MSVR of the CLI binary
        rust: [ 1.70.0, stable, nightly ]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2
        with:
          key: "${{ matrix.runs-on }}-${{ matrix.rust }}"
      - run: cargo check --all-targets --features bin --verbose
      - run: cargo build --all-targets --features bin --verbose
        # The next step will be cached by the CI cache.
      - name: Install cargo-nextest
        run: which cargo-nextest || cargo +stable install cargo-nextest
      - run: cargo nextest run --verbose

  # The lib is already transitively build above. Here, we only verify the MSRV.
  build_library_msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Lib as Dependency with MSRV
        run: cd ttfb-lib-msrv-check && cargo check --all-targets --verbose

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo test --all-targets --verbose

  network_tests:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: --cfg network_tests
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --verbose

  style_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt -- --check
      - run: cargo clippy --all-targets
      - run: cargo doc --document-private-items --no-deps
